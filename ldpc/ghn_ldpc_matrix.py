import numpy as np
import copy as cpy

UP, DOWN, LEFT, RIGHT = 'up', 'down', 'left', 'right'

def shift(direction, number, matrix):
    ''' shift given 2D matrix in-place the given number of rows or columns
        in the specified (UP, DOWN, LEFT, RIGHT) direction and return it
    '''
    if direction in (UP, DOWN):
        n =  (number % len(matrix) if direction == UP else
            -(number % len(matrix)))
        h = matrix[:n]
        del matrix[:n]
        matrix.extend(h)
        return matrix
    elif direction in (LEFT, RIGHT):
        n =  (number % len(matrix[0]) if direction == LEFT else
            -(number % len(matrix[0])))
        temp = zip(*matrix)
        h = temp[:n]
        del temp[:n]
        temp.extend(h)
        matrix[:] = map(list, zip(*temp))
        return matrix
    else:
        return matrix

mother_code_1_2_8640=[[-1, 34, -1, 95, -1, 279, -1, -1, -1, -1, 248, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
[-1, -1, 0, -1, 0, -1, -1, -1, -1, 134, 356, 275, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1],
[51, -1, 27, -1, -1, -1, -1, -1, 22, 152, -1, 57, -1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1],
[-1, 124, -1, 290, -1, 281, 15, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1],
[-1, 340, -1, 99, 336, -1, -1, -1, -1, -1, -1, -1, 33, -1, -1, -1, 0, 0, -1, -1, -1, -1, -1, -1],
[163, -1, 46, -1, -1, -1, -1, -1, -1, 306, -1, 86, -1, -1, -1, -1, -1, 0, 0, -1, -1, -1, -1, -1],
[-1, 185, -1, 24, -1, -1, -1, 94, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, -1, -1, -1],
[-1, 223, -1, 225, 325, -1, -1, -1, -1, -1, 297, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, -1, -1],
[46, -1, 314, -1, -1, -1, 59, -1, -1, 67, -1, 120, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, -1],
[-1, -1, 121, -1, -1, -1, -1, 161, -1, 303, -1, 264, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1],
[-1, 303, -1, 8, -1, 185, -1, -1, 138, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0],
[-1, -1, 312, -1, -1, -1, 100, -1, -1, 144, -1, 307, 33, 166, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0]]


mother_code_2_3_8640=[[78, -1, -1, 167, 237, -1, 3, -1, 266, -1, -1, 102, 153, -1, -1, 212, -1, 0, -1, -1, -1, -1, -1, -1],
[-1, 83, 189, -1, -1, 68, -1, 178, -1, 90, 205, -1, -1, 13, 4, -1, -1, 0, 0, -1, -1, -1, -1, -1],
[-1, 226, 147, -1, 46, -1, -1, 76, -1, 116, -1, 211, -1, 112, -1, 118, -1, -1, 0, 0, -1, -1, -1, -1],
[92, -1, -1, 214, -1, 236, 241, -1, 157, -1, 143, -1, 214, -1, 207, -1, -1, -1, -1, 0, 0, -1, -1, -1],
[144, -1, -1, 258, 264, -1, 53, -1, 114, -1, 172, -1, -1, 82, 262, -1, 62, -1, -1, -1, 0, 0, -1, -1],
[-1, 153, 120, -1, -1, 199, -1, 126, -1, 61, -1, 183, 15, -1, -1, 134, -1, -1, -1, -1, -1, 0, 0, -1],
[-1, 100, -1, 141, -1, 36, -1, 17, -1, 156, -1, 124, 162, -1, -1, 57, 0, -1, -1, -1, -1, -1, 0, 0],
[196, -1, 187, -1, 73, -1, 80, -1, 139, -1, 57, -1, -1, 236, 267, -1, 62, 256, -1, -1, -1, -1, -1, 0]]

mother_code_5_6_8640=[[-1, 47, 146, 203, 184, 112, -1, 116, 103, 181, 3, 140, 38, 68, 91, 70, 191, 138, 62, 14, -1, 0, -1, -1],
[117, 203, 67, 194, 206, 133, 174, 212, 104, 171, 176, 56, -1, 96, -1, 167, 149, 4, 1, -1, 177, 0, 0, -1],
[153, 206, 198, 173, 55, 72, 28, 53, -1, 82, 34, 186, 161, 80, 144, 204, 187, -1, 84, 77, 0, -1, 0, 0],
[44, 147, 27, 83, 118, 130, 41, 38, 100, 146, 183, 19, 85, 180, 163, -1, -1, 106, 140, 185, 177, 94, -1, 0]]

def GetH(c,t,Nm,mother_code):
	
	b=Nm/t

	iM=np.identity(b)
	nM = np.zeros(shape=(b,b))

	rM={}

	for row in range(c):
		rtM={}
		for col in range(t):
			v = mother_code[row][col]
			tM={}
			if v == -1:
				tM=cpy.copy(nM)
			else:
				tM=shift(RIGHT, v, iM)

			if len(rtM) == 0:				
				rtM = cpy.copy(tM)
			else:
				rtM=np.concatenate((rtM, tM), axis=1)

		if len(rM) == 0:
			rM = cpy.copy(rtM)
		else:
			rM=np.concatenate((rM, rtM), axis=0)

	return rM


def GetH_1_2():
	return GetH(12, 24, 8640, mother_code_1_2_8640)

def GetH_2_3():
	return GetH(8, 24, 8640, mother_code_2_3_8640)

def GetH_5_6():
	return GetH(4, 24, 8640, mother_code_5_6_8640)

