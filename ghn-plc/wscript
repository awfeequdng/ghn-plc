# -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

# def options(opt):
#     pass

def configure(cfg):
      
    cfg.check(features='cxx cxxprogram', lib=['Clp', 'ClpSolver', 'CoinUtils', 'Osi', 'OsiClp', 'OsiCommonTests'], cxxflags='-I /home/tsokalo/workspace/coin-Clp/include/coin',linkflags='-L /home/tsokalo/workspace/coin-Clp/lib', uselib_store='CLPSOLVER')        
    cfg.check(features='cxx cxxprogram', lib=['cpuid', 'fifi', 'fifi_no_dispatch', 'gauge', 'gtest', 'sak', 'tables'], libpath=['/home/tsokalo/workspace/new-kodo-rlnc/kodo-rlnc/kodo_build'], uselib_store='KODO')      
    
    cfg.check(features='cxx cxxprogram', lib=['graph','lp-solver'], libpath=['/home/tsokalo/workspace/SimpleNetSim/build/lp-solver/lp-solver/'], uselib_store='BRR')
    cfg.check(features='cxx cxxprogram', lib=['comm-net','comm-node'], libpath=['/home/tsokalo/workspace/SimpleNetSim/build/network/network/'], uselib_store='BRR')
    cfg.check(features='cxx cxxprogram', lib=['utils'], libpath=['/home/tsokalo/workspace/SimpleNetSim/build/utils/utils/'], uselib_store='BRR')
    cfg.check(features='cxx cxxprogram', lib=['god-view-routing-rules','nc-routing-rules'], libpath=['/home/tsokalo/workspace/SimpleNetSim/build/routing-rules/routing-rules/'], uselib_store='BRR')
    cfg.check(features='cxx cxxprogram', lib=['traffic-generator'], libpath=['/home/tsokalo/workspace/SimpleNetSim/build/traffic/traffic/'], uselib_store='BRR')
    cfg.check(features='cxx cxxprogram', lib=['ccack', 'matrix-echelon','matrix-operations'], libpath=['/home/tsokalo/workspace/SimpleNetSim/build/ccack/ccack/'], uselib_store='BRR')
    cfg.check(features='cxx cxxprogram', lib=['galois-field', 'galois-field-element','galois-field-polynomial'], libpath=['/home/tsokalo/workspace/SimpleNetSim/build/galois-field/galois-field/'], uselib_store='BRR')
       
    cfg.env.append_value("LINKFLAGS", ['-lClp', '-lClpSolver', '-lCoinUtils', '-lOsi', '-lOsiClp', '-lOsiCommonTests', '-L/home/tsokalo/workspace/coin-Clp/lib'])        
    cfg.env.append_value("LINKFLAGS", ['-lcpuid', '-lfifi', '-lfifi_no_dispatch', '-lgauge', '-lgtest', '-lsak', '-ltables', '-L/home/tsokalo/workspace/new-kodo-rlnc/kodo-rlnc/kodo_build'])      
    
    cfg.env.append_value("LINKFLAGS", ['-lutils', '-L/home/tsokalo/workspace/SimpleNetSim/build/utils/utils/'])
    cfg.env.append_value("LINKFLAGS", ['-lgalois-field', '-lgalois-field-element','-lgalois-field-polynomial', '-L/home/tsokalo/workspace/SimpleNetSim/build/galois-field/galois-field/'])
    cfg.env.append_value("LINKFLAGS", ['-lccack', '-lmatrix-echelon','-lmatrix-operations', '-L/home/tsokalo/workspace/SimpleNetSim/build/ccack/ccack/'])
    cfg.env.append_value("LINKFLAGS", ['-lgraph','-llp-solver', '-L/home/tsokalo/workspace/SimpleNetSim/build/lp-solver/lp-solver/'])
    cfg.env.append_value("LINKFLAGS", ['-lcomm-net','-lcomm-node', '-L/home/tsokalo/workspace/SimpleNetSim/build/network/network/'])
    cfg.env.append_value("LINKFLAGS", ['-ltraffic-generator', '-L/home/tsokalo/workspace/SimpleNetSim/build/traffic/traffic/'])            
    cfg.env.append_value("LINKFLAGS", ['-lgod-view-routing-rules','-lnc-routing-rules', '-L/home/tsokalo/workspace/SimpleNetSim/build/routing-rules/routing-rules/'])

           
    cfg.env.append_value("LIB", ['Clp', 'ClpSolver', 'CoinUtils', 'Osi', 'OsiClp', 'OsiCommonTests'])
    cfg.env.append_value("LIB", ['cpuid', 'fifi', 'fifi_no_dispatch', 'gauge', 'gtest', 'sak', 'tables'])
    cfg.env.append_value("LIB", ['utils','galois-field', 'galois-field-element','galois-field-polynomial','ccack', 'matrix-echelon','matrix-operations','graph','lp-solver','comm-net','comm-node','traffic-generator','god-view-routing-rules','nc-routing-rules'])  
   
    cfg.env.append_value('INCLUDES', ['/home/tsokalo/workspace/new-kodo-rlnc/kodo-rlnc/src',
    '/home/tsokalo/workspace/new-kodo-rlnc/kodo-rlnc/bundle_dependencies/allocate-7c9f51/1.0.0/src',
	'/home/tsokalo/workspace/new-kodo-rlnc/kodo-rlnc/bundle_dependencies/boost-abe3de/2.1.0',
	'/home/tsokalo/workspace/new-kodo-rlnc/kodo-rlnc/bundle_dependencies/cpuid-4d8071/4.0.0/src',
	'/home/tsokalo/workspace/new-kodo-rlnc/kodo-rlnc/bundle_dependencies/endian-30a816/3.0.0/src',
	'/home/tsokalo/workspace/new-kodo-rlnc/kodo-rlnc/bundle_dependencies/fifi-8960fd/24.0.0/src',
	'/home/tsokalo/workspace/new-kodo-rlnc/kodo-rlnc/bundle_dependencies/gauge-f88f90/10.0.0/src',
	'/home/tsokalo/workspace/new-kodo-rlnc/kodo-rlnc/bundle_dependencies/gtest-5c3bfe/3.0.0',
	'/home/tsokalo/workspace/new-kodo-rlnc/kodo-rlnc/bundle_dependencies/hex-4d9037/3.0.0/src',
	'/home/tsokalo/workspace/new-kodo-rlnc/kodo-rlnc/bundle_dependencies/kodo-core-de4387/6.1.0/src',
	'/home/tsokalo/workspace/new-kodo-rlnc/kodo-rlnc/bundle_dependencies/meta-768c5a/2.1.0/src',
	'/home/tsokalo/workspace/new-kodo-rlnc/kodo-rlnc/bundle_dependencies/platform-bccd32/2.0.0/src',
	'/home/tsokalo/workspace/new-kodo-rlnc/kodo-rlnc/bundle_dependencies/recycle-b2469b/2.0.0/src',
	'/home/tsokalo/workspace/new-kodo-rlnc/kodo-rlnc/bundle_dependencies/sak-1bdcea/15.0.0/src',
	'/home/tsokalo/workspace/new-kodo-rlnc/kodo-rlnc/bundle_dependencies/storage-20a331/2.1.0/src',
	'/home/tsokalo/workspace/new-kodo-rlnc/kodo-rlnc/bundle_dependencies/stub-90d487/5.0.1/src',
	'/home/tsokalo/workspace/new-kodo-rlnc/kodo-rlnc/bundle_dependencies/tables-c83c83/6.0.0/src',
	'/home/tsokalo/workspace/new-kodo-rlnc/kodo-rlnc/bundle_dependencies/waf-tools-51dff5/3.14.1',
	'/home/tsokalo/workspace/coin-Clp/include/coin',
	'/home/tsokalo/workspace/SimpleNetSim',
	'/home/tsokalo/workspace/SimpleNetSim/lp-solver',	
	'/home/tsokalo/workspace/SimpleNetSim/network',
	'/home/tsokalo/workspace/SimpleNetSim/utils',
	'/home/tsokalo/workspace/SimpleNetSim/routing-rules',
	'/home/tsokalo/workspace/SimpleNetSim/traffic',
	'/home/tsokalo/workspace/SimpleNetSim/ccack'])
	
def build(bld):
    module = bld.create_ns3_module('ghn-plc', ['core','plc','stats','network','applications','internet'])
    module.source = [
        'model/ghn-plc.cc',        
        'model/ghn-plc-dll-apc.cc',
        'model/ghn-plc-dll-llc.cc',
        'model/ghn-plc-utilities.cc',
        'model/ghn-plc-dll-management.cc',
        'model/ghn-plc-routing-table.cc',
        'model/ghn-plc-dll-mac.cc',
        'model/ghn-plc-net-device.cc',
        'model/ghn-plc-llc-flow.cc',
        'model/ghn-plc-llc-coded-flow.cc',
        'model/ghn-plc-bit-loading.cc',
        'model/ghn-plc-bit-loading-data.cc',          
        'model/ghn-plc-phy-pma.cc',        
        'model/ghn-plc-link-performance-model.cc',
        'model/ghn-plc-fulld-phy-pmd.cc',
        'model/ghn-plc-halfd-phy-pmd.cc',
        'model/ghn-plc-phy-pcs.cc',
        'model/ghn-plc-phy-management.cc',          
        'model/ghn-plc-water-filling.cc',
        'model/ghn-plc-ack-info.cc',
        'model/ghn-plc-segmenter.cc', 
        'model/ghn-plc-crc-trailer.cc',
        'model/ghn-plc-lpdu-header.cc',
        'model/ghn-plc-llc-frame-header.cc',  
        'model/ghn-plc-phy-header.cc',
        'model/ghn-plc-dll-mac-backoff.cc',                
        'helper/ghn-plc-helper.cc',
        'helper/ghn-plc-onoff-helper.cc',
        'helper/ghn-plc-packet-sink-helper.cc',
        'helper/ghn-plc-udp-client-helper.cc',        
        'logging/ghn-plc-cut-log.cc',
        'logging/ghn-plc-logger.cc',   
        'logging/ghn-plc-stats.cc',
        'application/ghn-plc-onoff-app.cc',
        'application/ghn-plc-packet-sink.cc',
        'application/ghn-plc-udp-client.cc',
        'application/ghn-plc-greedy-udp-client.cc'        
        ]                      

    module_test = bld.create_ns3_module_test_library('ghn-plc')
    module_test.source = [
        'test/ghn-plc-test-suite.cc',
        ]

    headers = bld(features=['ns3header'])
    headers.module = 'ghn-plc'
    headers.source = [
        'model/ghn-plc.h',
        'model/ghn-plc-defs.h',
        'model/ghn-plc-dll-apc.h',
        'model/ghn-plc-dll-llc.h',
        'model/ghn-plc-utilities.h',
        'model/ghn-plc-dll-management.h',
        'model/ghn-plc-routing-table.h',
        'model/ghn-plc-dll-mac.h',
        'model/ghn-plc-net-device.h',
        'model/ghn-plc-llc-flow.h',
        'model/ghn-plc-llc-coded-flow.h',
        'model/ghn-plc-bit-loading.h',
        'model/ghn-plc-bit-loading-data.h',        
        'model/ghn-plc-statistics.h',        
        'model/ghn-plc-phy-pma.h',
        'model/ghn-plc-link-performance-model.h',
        'model/ghn-plc-fulld-phy-pmd.h',
        'model/ghn-plc-halfd-phy-pmd.h',
        'model/ghn-plc-phy-pcs.h',
        'model/ghn-plc-phy-management.h',
        'model/ghn-plc-water-filling.h',
        'model/ghn-plc-header.h',   
        'model/ghn-plc-ack-info.h',    
        'model/ghn-plc-segmenter.h',
        'model/ghn-plc-crc-trailer.h',
        'model/ghn-plc-lpdu-header.h',
        'model/ghn-plc-llc-frame-header.h',
        'model/ghn-plc-phy-header.h',      
        'model/ghn-plc-dll-mac-backoff.h',  
        'model/ghn-plc-data-rate-calculator.h',
        'helper/ghn-plc-helper.h',
        'helper/ghn-plc-onoff-helper.h',
        'helper/ghn-plc-packet-sink-helper.h',
        'helper/ghn-plc-udp-client-helper.h',
        'logging/ghn-plc-cut-log.h',
        'logging/ghn-plc-logger.h',
        'logging/ghn-plc-event-descriptor.h',
        'logging/ghn-plc-stats.h',
        'logging/ghn-plc-read-log.h',
        'application/ghn-plc-onoff-app.h',
        'application/ghn-plc-packet-sink.h',
        'application/ghn-plc-udp-client.h',
        'application/ghn-plc-greedy-udp-client.h'
        ]

    if bld.env.ENABLE_EXAMPLES:
        bld.recurse('examples')

    # bld.ns3_python_bindings()
